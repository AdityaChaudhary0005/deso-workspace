{"ast":null,"code":"import \"core-js/modules/es.promise.js\";\nimport axios from 'axios';\n// remove this later and figure out a better solution for the this binding issue\nlet Notifications;\nexport class Notification {\n  constructor(node, identity) {\n    this.node = void 0;\n    this.identity = void 0;\n    this.node = node;\n    this.identity = identity;\n    Notifications = this;\n  }\n\n  async getNotifications(request) {\n    const endpoint = 'get-notifications';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getUnreadNotificationsCount(request) {\n    const endpoint = 'get-unread-notifications-count';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async setNotificationMetadata(request) {\n    const jwt = await this.identity.getJwt();\n    const unread = await Notifications.getUnreadNotificationsCount({\n      PublicKeyBase58Check: request.PublicKeyBase58Check\n    });\n    request.LastSeenIndex = unread.LastUnreadNotificationIndex;\n    request.UnreadNotifications = 0;\n    request.JWT = jwt;\n    const endpoint = 'set-notification-metadata';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/libs/deso-protocol/src/lib/notification/Notification.ts"],"names":["axios","Notifications","Notification","constructor","node","identity","getNotifications","request","endpoint","post","getUri","getUnreadNotificationsCount","setNotificationMetadata","jwt","getJwt","unread","PublicKeyBase58Check","LastSeenIndex","LastUnreadNotificationIndex","UnreadNotifications","JWT"],"mappings":";AAOA,OAAOA,KAAP,MAAkB,OAAlB;AAGA;AACA,IAAIC,aAAJ;AACA,OAAO,MAAMC,YAAN,CAAmB;AAGxBC,EAAAA,WAAW,CAACC,IAAD,EAAaC,QAAb,EAAiC;AAAA,SAF5CD,IAE4C;AAAA,SAD5CC,QAC4C;AAC1C,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACAJ,IAAAA,aAAa,GAAG,IAAhB;AACD;;AAE4B,QAAhBK,gBAAgB,CAC3BC,OAD2B,EAEQ;AACnC,UAAMC,QAAQ,GAAG,mBAAjB;AACA,WAAO,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAE,KAAKL,IAAL,CAAUM,MAAV,EAAmB,IAAGF,QAAS,EAA7C,EAAgDD,OAAhD,CAAb;AACD;;AAEuC,QAA3BI,2BAA2B,CACtCJ,OADsC,EAEE;AACxC,UAAMC,QAAQ,GAAG,gCAAjB;AACA,WAAO,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAE,KAAKL,IAAL,CAAUM,MAAV,EAAmB,IAAGF,QAAS,EAA7C,EAAgDD,OAAhD,CAAb;AACD;;AAEmC,QAAvBK,uBAAuB,CAClCL,OADkC,EAEnB;AACf,UAAMM,GAAG,GAAG,MAAM,KAAKR,QAAL,CAAcS,MAAd,EAAlB;AACA,UAAMC,MAAM,GAAG,MAAMd,aAAa,CAACU,2BAAd,CAA0C;AAC7DK,MAAAA,oBAAoB,EAAET,OAAO,CAACS;AAD+B,KAA1C,CAArB;AAGAT,IAAAA,OAAO,CAACU,aAAR,GAAwBF,MAAM,CAACG,2BAA/B;AACAX,IAAAA,OAAO,CAACY,mBAAR,GAA8B,CAA9B;AACAZ,IAAAA,OAAO,CAACa,GAAR,GAAcP,GAAd;AACA,UAAML,QAAQ,GAAG,2BAAjB;AACA,WAAO,MAAMR,KAAK,CAACS,IAAN,CAAY,GAAE,KAAKL,IAAL,CAAUM,MAAV,EAAmB,IAAGF,QAAS,EAA7C,EAAgDD,OAAhD,CAAb;AACD;;AAnCuB","sourcesContent":["import {\n  GetNotificationsCountRequest,\n  GetNotificationsCountResponse,\n  GetNotificationsRequest,\n  GetNotificationsResponse,\n  SetNotificationMetadataRequest,\n} from 'deso-protocol-types';\nimport axios from 'axios';\nimport { Node } from '../node/Node';\nimport { Identity } from '../identity/Identity';\n// remove this later and figure out a better solution for the this binding issue\nlet Notifications: Notification;\nexport class Notification {\n  node: Node;\n  identity: Identity;\n  constructor(node: Node, identity: Identity) {\n    this.node = node;\n    this.identity = identity;\n    Notifications = this;\n  }\n\n  public async getNotifications(\n    request: Partial<GetNotificationsRequest>\n  ): Promise<GetNotificationsResponse> {\n    const endpoint = 'get-notifications';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getUnreadNotificationsCount(\n    request: Partial<GetNotificationsCountRequest>\n  ): Promise<GetNotificationsCountResponse> {\n    const endpoint = 'get-unread-notifications-count';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async setNotificationMetadata(\n    request: Partial<SetNotificationMetadataRequest>\n  ): Promise<void> {\n    const jwt = await this.identity.getJwt();\n    const unread = await Notifications.getUnreadNotificationsCount({\n      PublicKeyBase58Check: request.PublicKeyBase58Check,\n    });\n    request.LastSeenIndex = unread.LastUnreadNotificationIndex;\n    request.UnreadNotifications = 0;\n    request.JWT = jwt;\n    const endpoint = 'set-notification-metadata';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}