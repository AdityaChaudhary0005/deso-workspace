{"ast":null,"code":"import \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport axios from 'axios';\nexport class User {\n  constructor(node, identity) {\n    this.node = void 0;\n    this.identity = void 0;\n    this.node = node;\n    this.identity = identity;\n  }\n\n  async getUserStateless(request) {\n    return (await axios.post(`${this.node.getUri()}/get-users-stateless`, request)).data;\n  }\n\n  getSingleProfilePicture(PublicKeyBase58Check) {\n    return `${this.node.getUri()}/get-single-profile-picture/${PublicKeyBase58Check}`;\n  }\n\n  async getSingleProfile(request) {\n    const endpoint = 'get-single-profile';\n    const response = (await axios.post(`${this.node.getUri()}/${endpoint}`, request)).data;\n    return response;\n  }\n\n  async getProfiles(request) {\n    const endpoint = 'get-profiles';\n    const response = (await axios.post(`${this.node.getUri()}/${endpoint}`, request)).data;\n    return response;\n  }\n\n  async getUserMetadata(request) {\n    const endpoint = `get-user-metadata/${request.PublicKeyBase58Check}`;\n    const response = (await axios.get(`${this.node.getUri()}/${endpoint}`)).data;\n    return response;\n  }\n\n  async deletePii(request) {\n    if (!request.PublicKeyBase58Check) {\n      throw Error('PublicKeyBase58Check is undefined');\n    }\n\n    const endpoint = 'delete-pii';\n    const JWT = await this.identity.getJwt();\n    await axios.post(`${this.node.getUri()}/${endpoint}`, Object.assign({}, request, {\n      JWT\n    }));\n    return true;\n  }\n\n  async blockPublicKey(request) {\n    if (!request.PublicKeyBase58Check) {\n      throw Error('PublicKeyBase58Check is undefined');\n    }\n\n    if (!request.BlockPublicKeyBase58Check) {\n      throw Error('BlockPublicKeyBase58Check is undefined');\n    }\n\n    const endpoint = 'block-public-key';\n    const JWT = await this.identity.getJwt();\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, Object.assign({}, request, {\n      JWT\n    }));\n  }\n\n  async getUserDerivedKeys(request) {\n    if (!request.PublicKeyBase58Check) {\n      throw Error('PublicKeyBase58Check is undefined');\n    }\n\n    const endpoint = 'get-user-derived-keys';\n    const JWT = await this.identity.getJwt();\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, Object.assign({}, request, {\n      JWT\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/libs/deso-protocol/src/lib/user/User.ts"],"names":["axios","User","constructor","node","identity","getUserStateless","request","post","getUri","data","getSingleProfilePicture","PublicKeyBase58Check","getSingleProfile","endpoint","response","getProfiles","getUserMetadata","get","deletePii","Error","JWT","getJwt","blockPublicKey","BlockPublicKeyBase58Check","getUserDerivedKeys"],"mappings":"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","sourcesContent":["import { Identity } from '../identity/Identity';\nimport { Node } from '../node/Node';\nimport axios from 'axios';\nimport {\n  GetUsersResponse,\n  GetUsersStatelessRequest,\n  GetSingleProfileResponse,\n  GetSingleProfileRequest,\n  GetProfilesRequest,\n  GetProfilesResponse,\n  GetUserMetadataRequest,\n  GetUserMetadataResponse,\n  DeletePIIRequest,\n  BlockPublicKeyRequest,\n  GetUserDerivedKeysRequest,\n  BlockPublicKeyResponse,\n  GetUserDerivedKeysResponse,\n} from 'deso-protocol-types';\nexport class User {\n  node: Node;\n  identity: Identity;\n  constructor(node: Node, identity: Identity) {\n    this.node = node;\n    this.identity = identity;\n  }\n  public async getUserStateless(\n    request: Partial<GetUsersStatelessRequest>\n    // PublicKeysBase58Check: string | string[]\n  ): Promise<GetUsersResponse> {\n    return (\n      await axios.post(`${this.node.getUri()}/get-users-stateless`, request)\n    ).data;\n  }\n\n  public getSingleProfilePicture(PublicKeyBase58Check: string) {\n    return `${this.node.getUri()}/get-single-profile-picture/${PublicKeyBase58Check}`;\n  }\n\n  public async getSingleProfile(\n    request: Partial<GetSingleProfileRequest>\n  ): Promise<GetSingleProfileResponse> {\n    const endpoint = 'get-single-profile';\n    const response = (\n      await axios.post(`${this.node.getUri()}/${endpoint}`, request)\n    ).data;\n    return response;\n  }\n  public async getProfiles(\n    request: Partial<GetProfilesRequest>\n  ): Promise<GetProfilesResponse> {\n    const endpoint = 'get-profiles';\n    const response = (\n      await axios.post(`${this.node.getUri()}/${endpoint}`, request)\n    ).data;\n    return response;\n  }\n\n  public async getUserMetadata(\n    request: Partial<GetUserMetadataRequest>\n  ): Promise<GetUserMetadataResponse> {\n    const endpoint = `get-user-metadata/${request.PublicKeyBase58Check}`;\n    const response = (await axios.get(`${this.node.getUri()}/${endpoint}`))\n      .data;\n    return response;\n  }\n\n  public async deletePii(request: Partial<DeletePIIRequest>): Promise<boolean> {\n    if (!request.PublicKeyBase58Check) {\n      throw Error('PublicKeyBase58Check is undefined');\n    }\n    const endpoint = 'delete-pii';\n    const JWT = await this.identity.getJwt();\n    await axios.post(`${this.node.getUri()}/${endpoint}`, {\n      ...request,\n      JWT,\n    });\n    return true;\n  }\n\n  public async blockPublicKey(\n    request: Partial<BlockPublicKeyRequest>\n  ): Promise<BlockPublicKeyResponse> {\n    if (!request.PublicKeyBase58Check) {\n      throw Error('PublicKeyBase58Check is undefined');\n    }\n    if (!request.BlockPublicKeyBase58Check) {\n      throw Error('BlockPublicKeyBase58Check is undefined');\n    }\n    const endpoint = 'block-public-key';\n    const JWT = await this.identity.getJwt();\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, {\n      ...request,\n      JWT,\n    });\n  }\n  public async getUserDerivedKeys(\n    request: Partial<GetUserDerivedKeysRequest>\n  ): Promise<GetUserDerivedKeysResponse> {\n    if (!request.PublicKeyBase58Check) {\n      throw Error('PublicKeyBase58Check is undefined');\n    }\n    const endpoint = 'get-user-derived-keys';\n    const JWT = await this.identity.getJwt();\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, {\n      ...request,\n      JWT,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}