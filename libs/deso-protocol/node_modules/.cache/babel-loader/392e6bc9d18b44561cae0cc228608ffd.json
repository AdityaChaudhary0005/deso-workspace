{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\chapters\\\\Read\\\\get-app-state\\\\GetAppStatePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { desoService } from '../../ChapterHelper/Chapter.atom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetAppStatePage = () => {\n  _s();\n\n  const deso = useRecoilValue(desoService);\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    deso.metaData.getAppState().then(response => {\n      setNodes(Object.values(response.Nodes).map(node => {\n        return node;\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto mt-20 max-w-[1160px] pb-2 w-full bg-[#fff] min-h-[800px] rounded-lg\",\n    children: nodes.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: nodes.map(node => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: node.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: node.URL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: node.Owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, node.Name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetAppStatePage, \"+p7glSSCB4Nt1/6QHLhW9VQxWew=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = GetAppStatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAppStatePage\");","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/chapters/Read/get-app-state/GetAppStatePage.tsx"],"names":["Table","TableBody","TableCell","TableHead","TableRow","useEffect","useState","useRecoilValue","desoService","GetAppStatePage","deso","nodes","setNodes","metaData","getAppState","then","response","Object","values","Nodes","map","node","length","minWidth","border","Name","URL","Owner"],"mappings":";;;AAAA,SACEA,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,eANP;AAQA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,WAAT,QAA4B,kCAA5B;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAMC,IAAI,GAAGH,cAAc,CAACC,WAAD,CAA3B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAQ,EAAR,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,IAAI,CAACG,QAAL,CAAcC,WAAd,GAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AAC7CJ,MAAAA,QAAQ,CACLK,MAAM,CAACC,MAAP,CAAcF,QAAQ,CAACG,KAAvB,CAAD,CAAyCC,GAAzC,CAA8CC,IAAD,IAAU;AACrD,eAAOA,IAAP;AACD,OAFD,CADM,CAAR;AAKD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,6EAAf;AAAA,cACGV,KAAK,CAACW,MAAN,GAAe,CAAf,iBACC,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAA8B,oBAAW,cAAzC;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAA,kBACGZ,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,UAAA,EAAE,EAAE;AAAE,gDAAoC;AAAEG,cAAAA,MAAM,EAAE;AAAV;AAAtC,WAFN;AAAA,kCAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA,sBAAyBH,IAAI,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA,sBAAyBJ,IAAI,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA,sBAAyBL,IAAI,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WACON,IAAI,CAACI,IADZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAvCM;;GAAMhB,e;UACEF,c;;;KADFE,e","sourcesContent":["import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { desoService } from '../../ChapterHelper/Chapter.atom';\r\nexport const GetAppStatePage = () => {\r\n  const deso = useRecoilValue(desoService);\r\n  const [nodes, setNodes] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    deso.metaData.getAppState().then((response) => {\r\n      setNodes(\r\n        (Object.values(response.Nodes) as any[]).map((node) => {\r\n          return node;\r\n        })\r\n      );\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"mx-auto mt-20 max-w-[1160px] pb-2 w-full bg-[#fff] min-h-[800px] rounded-lg\">\r\n      {nodes.length > 0 && (\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Name</TableCell>\r\n              <TableCell align=\"left\">URL</TableCell>\r\n              <TableCell align=\"left\">Owner</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {nodes.map((node) => (\r\n              <TableRow\r\n                key={node.Name}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell align=\"left\">{node.Name}</TableCell>\r\n                <TableCell align=\"left\">{node.URL}</TableCell>\r\n                <TableCell align=\"left\">{node.Owner}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}