{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\chapters\\\\ChapterHelper\\\\PostsChapter.tsx\";\nimport Deso from 'deso-protocol';\nimport { Route } from 'react-router-dom';\nimport { DEZO_DOG, ParentRoutes, RUSSIA, SAMPLE_POST } from '../../services/utils';\nimport Page from '../Read/Page';\nimport { CHAPTERS } from './Chapter.models';\nimport { PageSection } from './PageSections';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deso = new Deso();\nexport const postChapter = {\n  SUBMIT_POST: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Submit Post',\n    route: '/post/submit-post',\n    documentation: [],\n    githubSource: [],\n    method: deso.posts.submitPost,\n    params: {\n      UpdaterPublicKeyBase58Check: localStorage.getItem('login_key'),\n      BodyObj: {\n        Body: `Checking out the developer hub`,\n        VideoURLs: [],\n        ImageURLs: []\n      }\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.submitPost(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Submit a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 48\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_POSTS_STATELESS: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get posts Stateless',\n    route: '/post/get-posts-stateless',\n    method: deso.posts.getPostsStateless,\n    params: {},\n    documentation: [],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getPostsStateless(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Submit a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 48\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_SINGLE_POST: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Single Post',\n    route: '/post/get-single-post',\n    method: deso.posts.getSinglePost,\n    params: {\n      PostHashHex: SAMPLE_POST\n    },\n    documentation: [],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getSinglePost(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get a single Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 48\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_HOT_FEED: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Hot Feed',\n    route: '/post/get_hot_feed',\n    documentation: [],\n    method: deso.posts.getHotFeed,\n    params: {\n      ResponseLimit: 20\n    },\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getHotFeed(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get Hot Feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 48\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_DIAMONDED_POSTS: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Diamonded Posts',\n    route: '/post/get-diamonded-post',\n    method: deso.posts.getDiamondedPosts,\n    params: {\n      NumToFetch: 20,\n      SenderPublicKeyBase58Check: DEZO_DOG,\n      ReceiverPublicKeyBase58Check: RUSSIA\n    },\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/post-endpoints#get-diamonded-posts'],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getDiamondedPosts(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get diamonded posts.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 48\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_LIKES_FOR_POST: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Likes For Post',\n    route: '/post/get_likes_for_post',\n    params: {\n      Limit: 20,\n      Offset: 0,\n      PostHashHex: SAMPLE_POST\n    },\n    method: deso.posts.getLikesForPost,\n    documentation: [],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getDiamondedPosts(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get diamonded posts.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 48\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_DIAMONDS_FOR_POST: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Diamonds For Posts',\n    route: '/post/get-diamonds-for-post',\n    method: deso.posts.getDiamondsForPost,\n    params: {\n      Limit: 20,\n      Offset: 20,\n      PostHashHex: SAMPLE_POST\n    },\n    documentation: [],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getDiamondsForPost(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get Profiles and number of diamonds for users who gave diamonds to a given post.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_REPOSTS_FOR_POST: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Reposts For Post',\n    route: '/post/get-reposts-for-post',\n    method: deso.posts.getRepostsForPost,\n    params: {\n      Limit: 20,\n      Offset: 20,\n      PostHashHex: SAMPLE_POST\n    },\n    documentation: [],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getRepostsForPost(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get Profiles and number of diamonds for users who gave diamonds to a given post.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_QUOTE_REPOSTS_FOR_POST: {\n    parentRoute: ParentRoutes.posts,\n    title: 'Get Quote Reposts FOR POST',\n    route: '/post/get-quote-reposts-for-post',\n    method: deso.posts.getQuoteRepostsForPost,\n    params: {\n      Limit: 20,\n      Offset: 20,\n      PostHashHex: SAMPLE_POST\n    },\n    documentation: [],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.posts.getQuoteRepostsForPost(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get profiles of users who quote reposted a given post and the content of the quote repost.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/chapters/ChapterHelper/PostsChapter.tsx"],"names":["Deso","Route","DEZO_DOG","ParentRoutes","RUSSIA","SAMPLE_POST","Page","CHAPTERS","PageSection","deso","postChapter","SUBMIT_POST","parentRoute","posts","title","route","documentation","githubSource","method","submitPost","params","UpdaterPublicKeyBase58Check","localStorage","getItem","BodyObj","Body","VideoURLs","ImageURLs","component","methodName","GET_POSTS_STATELESS","getPostsStateless","GET_SINGLE_POST","getSinglePost","PostHashHex","GET_HOT_FEED","getHotFeed","ResponseLimit","GET_DIAMONDED_POSTS","getDiamondedPosts","NumToFetch","SenderPublicKeyBase58Check","ReceiverPublicKeyBase58Check","GET_LIKES_FOR_POST","Limit","Offset","getLikesForPost","GET_DIAMONDS_FOR_POST","getDiamondsForPost","GET_REPOSTS_FOR_POST","getRepostsForPost","GET_QUOTE_REPOSTS_FOR_POST","getQuoteRepostsForPost"],"mappings":"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","sourcesContent":["import Deso from 'deso-protocol';\r\nimport {\r\n  GetDiamondsForPostRequest,\r\n  GetLikesForPostRequest,\r\n  GetPostsDiamondedBySenderForReceiverRequest,\r\n  GetPostsStatelessRequest,\r\n  GetQuoteRepostsForPostRequest,\r\n  GetRepostsForPostRequest,\r\n  HotFeedPageRequest,\r\n  SubmitPostRequest,\r\n} from 'deso-protocol-types';\r\nimport { Route } from 'react-router-dom';\r\nimport {\r\n  DEZO_DOG,\r\n  ParentRoutes,\r\n  RUSSIA,\r\n  SAMPLE_POST,\r\n} from '../../services/utils';\r\nimport Page from '../Read/Page';\r\nimport { CHAPTERS } from './Chapter.models';\r\nimport { PageSection } from './PageSections';\r\n\r\nconst deso = new Deso();\r\nexport const postChapter = {\r\n  SUBMIT_POST: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Submit Post',\r\n    route: '/post/submit-post',\r\n    documentation: [],\r\n    githubSource: [],\r\n    method: deso.posts.submitPost,\r\n    params: {\r\n      UpdaterPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      BodyObj: {\r\n        Body: `Checking out the developer hub`,\r\n        VideoURLs: [],\r\n        ImageURLs: [],\r\n      },\r\n    } as unknown as Partial<SubmitPostRequest>,\r\n\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.submitPost(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(this.title, <div>Submit a post</div>)}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n\r\n  GET_POSTS_STATELESS: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get posts Stateless',\r\n    route: '/post/get-posts-stateless',\r\n    method: deso.posts.getPostsStateless,\r\n    params: {} as Partial<GetPostsStatelessRequest>,\r\n    documentation: [],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getPostsStateless(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(this.title, <div>Submit a post</div>)}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_SINGLE_POST: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Single Post',\r\n    route: '/post/get-single-post',\r\n    method: deso.posts.getSinglePost,\r\n    params: {\r\n      PostHashHex: SAMPLE_POST,\r\n    },\r\n    documentation: [],\r\n    githubSource: [],\r\n\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getSinglePost(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(this.title, <div>Get a single Post</div>)}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_HOT_FEED: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Hot Feed',\r\n    route: '/post/get_hot_feed',\r\n    documentation: [],\r\n    method: deso.posts.getHotFeed,\r\n    params: { ResponseLimit: 20 } as HotFeedPageRequest,\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getHotFeed(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(this.title, <div>Get Hot Feed</div>)}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_DIAMONDED_POSTS: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Diamonded Posts',\r\n    route: '/post/get-diamonded-post',\r\n\r\n    method: deso.posts.getDiamondedPosts,\r\n    params: {\r\n      NumToFetch: 20,\r\n      SenderPublicKeyBase58Check: DEZO_DOG,\r\n      ReceiverPublicKeyBase58Check: RUSSIA,\r\n    } as GetPostsDiamondedBySenderForReceiverRequest,\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/post-endpoints#get-diamonded-posts',\r\n    ],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getDiamondedPosts(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(this.title, <div>Get diamonded posts.</div>)}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_LIKES_FOR_POST: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Likes For Post',\r\n    route: '/post/get_likes_for_post',\r\n    params: {\r\n      Limit: 20,\r\n      Offset: 0,\r\n      PostHashHex: SAMPLE_POST,\r\n    } as GetLikesForPostRequest,\r\n    method: deso.posts.getLikesForPost,\r\n    documentation: [],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getDiamondedPosts(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(this.title, <div>Get diamonded posts.</div>)}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_DIAMONDS_FOR_POST: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Diamonds For Posts',\r\n    route: '/post/get-diamonds-for-post',\r\n    method: deso.posts.getDiamondsForPost,\r\n    params: {\r\n      Limit: 20,\r\n      Offset: 20,\r\n      PostHashHex: SAMPLE_POST,\r\n    } as GetDiamondsForPostRequest,\r\n    documentation: [],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getDiamondsForPost(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Get Profiles and number of diamonds for users who gave\r\n                  diamonds to a given post.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_REPOSTS_FOR_POST: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Reposts For Post',\r\n    route: '/post/get-reposts-for-post',\r\n    method: deso.posts.getRepostsForPost,\r\n    params: {\r\n      Limit: 20,\r\n      Offset: 20,\r\n      PostHashHex: SAMPLE_POST,\r\n    } as GetRepostsForPostRequest,\r\n    documentation: [],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getRepostsForPost(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Get Profiles and number of diamonds for users who gave\r\n                  diamonds to a given post.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_QUOTE_REPOSTS_FOR_POST: {\r\n    parentRoute: ParentRoutes.posts,\r\n    title: 'Get Quote Reposts FOR POST',\r\n    route: '/post/get-quote-reposts-for-post',\r\n    method: deso.posts.getQuoteRepostsForPost,\r\n    params: {\r\n      Limit: 20,\r\n      Offset: 20,\r\n      PostHashHex: SAMPLE_POST,\r\n    } as GetQuoteRepostsForPostRequest,\r\n    documentation: [],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.posts.getQuoteRepostsForPost(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Get profiles of users who quote reposted a given post and the\r\n                  content of the quote repost.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}