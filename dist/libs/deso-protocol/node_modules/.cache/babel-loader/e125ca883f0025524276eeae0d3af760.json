{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\components\\\\profile\\\\DisplayFollower.tsx\",\n    _s = $RefreshSig$();\n\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport Avatar from '@mui/material/Avatar';\nimport { useEffect, useState } from 'react';\nimport { getFollowerCount } from '../../services/utils';\nimport DisplayMessages from './DisplayMessages';\nimport { useRecoilValue } from 'recoil';\nimport { desoService } from '../../chapters/ChapterHelper/Chapter.atom';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayFollower = ({\n  publicKey\n}) => {\n  _s();\n\n  const deso = useRecoilValue(desoService);\n  const [profileDescriptionCard, setCard] = useState(null);\n  const [follower, setFollower] = useState(null);\n  const [followerPicture, setFollowerPicture] = useState(null);\n  const [followerFollowers, setFollowerFollowers] = useState(null);\n  useEffect(() => {\n    getFollowerInfo(publicKey);\n  }, []);\n  useEffect(() => {\n    if (followerPicture && follower) {\n      setCard(generateCard(follower, followerPicture));\n    }\n  }, [followerPicture, follower, setFollower, setFollowerFollowers, followerFollowers]);\n\n  const getFollowerInfo = async publicKey => {\n    let profileInfoResponse;\n\n    if (publicKey !== null) {\n      var _profileInfoResponse, _profileInfoResponse$;\n\n      const userInfoResponse = await deso.user.getUserStateless({\n        PublicKeysBase58Check: [publicKey]\n      });\n      profileInfoResponse = await deso.user.getSingleProfile({\n        PublicKeyBase58Check: publicKey\n      });\n      const profilePictureSrc = deso.user.getSingleProfilePicture((_profileInfoResponse = profileInfoResponse) == null ? void 0 : (_profileInfoResponse$ = _profileInfoResponse.Profile) == null ? void 0 : _profileInfoResponse$.PublicKeyBase58Check);\n      setFollower({\n        profileInfoResponse,\n        userInfoResponse\n      });\n      setFollowerPicture(profilePictureSrc);\n      const followers = await deso.social.getFollowsStateless({\n        PublicKeyBase58Check: publicKey\n      });\n      setFollowerFollowers(followers);\n    }\n  };\n\n  const generateCard = (myUserInfo, profilePictureSrc) => {\n    var _profileInfoResponse$2, _profileInfoResponse$3;\n\n    const userInfoResponse = myUserInfo == null ? void 0 : myUserInfo.userInfoResponse;\n    const profileInfoResponse = myUserInfo == null ? void 0 : myUserInfo.profileInfoResponse;\n\n    if (!(userInfoResponse && profileInfoResponse)) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: \"pb-2\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: profilePictureSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this),\n        subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: `@${profileInfoResponse == null ? void 0 : (_profileInfoResponse$2 = profileInfoResponse.Profile) == null ? void 0 : _profileInfoResponse$2.Username}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-3 font-semibold\",\n            children: [\"Followers: \", followerFollowers == null ? void 0 : followerFollowers.NumFollowers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-3 font-semibold\",\n            children: [\"Following: \", getFollowerCount(userInfoResponse)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-around mx-3 my-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-4 mb-5 font-normal\",\n        children: profileInfoResponse == null ? void 0 : (_profileInfoResponse$3 = profileInfoResponse.Profile) == null ? void 0 : _profileInfoResponse$3.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayMessages, {\n        publicKey: publicKey\n      }, `${publicKey}Messages`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-[600px] mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center  font-bold text-lg mb-2 font-mono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: profileDescriptionCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayFollower, \"te/4GlS9Qmf9X7POE9kcFs60FdM=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = DisplayFollower;\nexport default DisplayFollower;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayFollower\");","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/components/profile/DisplayFollower.tsx"],"names":["Card","CardHeader","Avatar","useEffect","useState","getFollowerCount","DisplayMessages","useRecoilValue","desoService","DisplayFollower","publicKey","deso","profileDescriptionCard","setCard","follower","setFollower","followerPicture","setFollowerPicture","followerFollowers","setFollowerFollowers","getFollowerInfo","generateCard","profileInfoResponse","userInfoResponse","user","getUserStateless","PublicKeysBase58Check","getSingleProfile","PublicKeyBase58Check","profilePictureSrc","getSingleProfilePicture","Profile","followers","social","getFollowsStateless","myUserInfo","Username","NumFollowers","Description"],"mappings":"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","sourcesContent":["import Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport { ReactElement, useEffect, useState } from 'react';\r\nimport { MyUserInfoType, FollowerInfoType } from '../../recoil/AppState.atoms';\r\nimport { getFollowerCount } from '../../services/utils';\r\nimport DisplayMessages from './DisplayMessages';\r\nimport {\r\n  GetFollowsResponse,\r\n  GetSingleProfileResponse,\r\n} from 'deso-protocol-types';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { desoService } from '../../chapters/ChapterHelper/Chapter.atom';\r\nexport interface DisplayUserProps {\r\n  publicKey: string;\r\n}\r\n\r\nconst DisplayFollower = ({ publicKey }: DisplayUserProps) => {\r\n  const deso = useRecoilValue(desoService);\r\n  const [profileDescriptionCard, setCard] = useState<ReactElement | null>(null);\r\n  const [follower, setFollower] = useState<FollowerInfoType | null>(null);\r\n  const [followerPicture, setFollowerPicture] = useState<string | null>(null);\r\n  const [followerFollowers, setFollowerFollowers] =\r\n    useState<GetFollowsResponse | null>(null);\r\n\r\n  useEffect(() => {\r\n    getFollowerInfo(publicKey);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (followerPicture && follower) {\r\n      setCard(generateCard(follower, followerPicture));\r\n    }\r\n  }, [\r\n    followerPicture,\r\n    follower,\r\n    setFollower,\r\n    setFollowerFollowers,\r\n    followerFollowers,\r\n  ]);\r\n\r\n  const getFollowerInfo = async (publicKey: string) => {\r\n    let profileInfoResponse: GetSingleProfileResponse;\r\n    if (publicKey !== null) {\r\n      const userInfoResponse = await deso.user.getUserStateless({\r\n        PublicKeysBase58Check: [publicKey],\r\n      });\r\n      profileInfoResponse = await deso.user.getSingleProfile({\r\n        PublicKeyBase58Check: publicKey,\r\n      });\r\n      const profilePictureSrc = deso.user.getSingleProfilePicture(\r\n        profileInfoResponse?.Profile?.PublicKeyBase58Check as string\r\n      );\r\n      setFollower({ profileInfoResponse, userInfoResponse });\r\n      setFollowerPicture(profilePictureSrc);\r\n      const followers = await deso.social.getFollowsStateless({\r\n        PublicKeyBase58Check: publicKey,\r\n      });\r\n      setFollowerFollowers(followers);\r\n    }\r\n  };\r\n\r\n  const generateCard = (\r\n    myUserInfo: MyUserInfoType,\r\n    profilePictureSrc: string\r\n  ) => {\r\n    const userInfoResponse = myUserInfo?.userInfoResponse;\r\n    const profileInfoResponse = myUserInfo?.profileInfoResponse;\r\n    if (!(userInfoResponse && profileInfoResponse)) {\r\n      return <></>;\r\n    }\r\n    return (\r\n      <Card variant=\"outlined\" className=\"pb-2\">\r\n        <CardHeader\r\n          avatar={<Avatar src={profilePictureSrc}></Avatar>}\r\n          subheader={\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"font-bold\">{`@${profileInfoResponse?.Profile?.Username}`}</div>\r\n              <div className=\"ml-3 font-semibold\">\r\n                Followers: {followerFollowers?.NumFollowers}\r\n              </div>\r\n              <div className=\"ml-3 font-semibold\">\r\n                Following: {getFollowerCount(userInfoResponse)}\r\n              </div>\r\n            </div>\r\n          }\r\n        ></CardHeader>\r\n        <div className=\"flex justify-around mx-3 my-3\"></div>\r\n        <div className=\"mx-4 mb-5 font-normal\">\r\n          {profileInfoResponse?.Profile?.Description}\r\n        </div>\r\n\r\n        <DisplayMessages\r\n          key={`${publicKey}Messages`}\r\n          publicKey={publicKey}\r\n        ></DisplayMessages>\r\n      </Card>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col w-[600px] mx-auto\">\r\n      <div className=\"text-center  font-bold text-lg mb-2 font-mono\"></div>\r\n      <div>{profileDescriptionCard}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default DisplayFollower;\r\n"]},"metadata":{},"sourceType":"module"}