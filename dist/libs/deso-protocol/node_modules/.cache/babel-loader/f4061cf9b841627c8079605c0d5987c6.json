{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\chapters\\\\ChapterHelper\\\\SocialChapter.tsx\";\nimport Deso from 'deso-protocol';\nimport { Route } from 'react-router-dom';\nimport { DEZO_DOG, DOGS_LOVE_DIAMONDS_POST, ParentRoutes, TYLER } from '../../services/utils';\nimport Page from '../Read/Page';\nimport { CHAPTERS } from './Chapter.models';\nimport { CommonPageSectionTitles, PageSection } from './PageSections';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deso = new Deso();\nexport const socialChapter = {\n  GET_FOLLOWS_STATELESS: {\n    parentRoute: ParentRoutes.social,\n    title: 'Get Follows Stateless',\n    route: '/social/get-follows-stateless',\n    params: {\n      PublicKeyBase58Check: DEZO_DOG,\n      NumToFetch: 20\n    },\n    method: deso.social.getFollowsStateless,\n    documentation: ['https://docs.deso.org/backend/blockchain-data/api/social-endpoints#get-follows-stateless'],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.posts.getFollowsStateless(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Similar to the get-users-stateless, but Instead it will return an array of followers for a specific account.\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_MESSAGE_STATELESS: {\n    parentRoute: ParentRoutes.social,\n    title: 'Get Message Stateless',\n    route: '/social/get-message-stateless',\n    documentation: [],\n    githubSource: [],\n    params: {\n      NumToFetch: 25,\n      PublicKeyBase58Check: localStorage.getItem('login_key'),\n      FetchAfterPublicKeyBase58Check: '',\n      HoldersOnly: false,\n      FollowersOnly: false,\n      FollowingOnly: false,\n      HoldingsOnly: false,\n      SortAlgorithm: 'time'\n    },\n    method: deso.social.getMessagesStateless,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.getMessagesStateless(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Similar to the get-users-stateless, but Instead it will return an array of followers for a specific account.\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  CREATE_FOLLOW_TRANSACTION: {\n    parentRoute: ParentRoutes.social,\n    title: 'Create Follow Transaction',\n    route: '/social/create-follow-transaction',\n    documentation: ['https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#create-follow-txn-stateless'],\n    githubSource: [],\n    params: {\n      IsUnfollow: true,\n      FollowedPublicKeyBase58Check: localStorage.getItem('login_key'),\n      FollowerPublicKeyBase58Check: TYLER\n    },\n    method: deso.social.createFollowTxnStateless,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.createFollowTxnStateless(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Follow or unfollow a specific user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_HODLERS_FOR_PUBLIC_KEY: {\n    parentRoute: ParentRoutes.social,\n    title: 'Get Hodlers For Public Key',\n    route: '/social/get-hodlers-for-public-key',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/social-endpoints#get-hodlers-for-public-key'],\n    params: {\n      NumToFetch: 20,\n      PublicKeyBase58Check: TYLER\n    },\n    method: deso.social.getHodlersForPublicKey,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.getHodlersForPublicKey(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_DIAMONDS_FOR_PUBLIC_KEY: {\n    parentRoute: ParentRoutes.social,\n    title: 'Get Diamonds For Public Key',\n    route: '/social/get_diamonds_for_public_key',\n    githubSource: [],\n    documentation: ['Get a list of objects representing all the diamonds a user has given or received.'],\n    params: {\n      NumToFetch: 20,\n      PublicKeyBase58Check: TYLER\n    },\n    method: deso.social.getDiamondsForPublicKey,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.getDiamondsForPublicKey(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gets diamonds that \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  IS_FOLLOWING_PUBLIC_KEY: {\n    parentRoute: ParentRoutes.social,\n    title: 'Is Following Public Key',\n    route: '/social/is-following-public-key',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/social-endpoints#is-following-public-key'],\n    params: {\n      PublicKeyBase58Check: TYLER,\n      IsFollowingPublicKeyBase58Check: DEZO_DOG\n    },\n    method: deso.social.isFollowingPublicKey,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.isFollowingPublicKey(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Determines if a user is following another.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  IS_HODLING_PUBLIC_KEY: {\n    parentRoute: ParentRoutes.social,\n    title: 'Is Hodling Public Key',\n    route: '/social/is_hodling_public_key',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/social-endpoints#is-hodling-public-key'],\n    params: {\n      PublicKeyBase58Check: TYLER,\n      IsHodlingPublicKeyBase58Check: DEZO_DOG,\n      IsDAOCoin: false\n    },\n    method: deso.social.isHodlingPublicKey,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.isHodlingPublicKey(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Check if the user holds the creator coin of a public key. If user is holding some amount of creator coin, we return the BalanceEntryResponse representing how much the user holds.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  SEND_MESSAGE: {\n    parentRoute: ParentRoutes.social,\n    title: 'Send Message',\n    route: '/social/send-message-stateless',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#send-message'],\n    params: {\n      RecipientPublicKeyBase58Check: DEZO_DOG,\n      SenderPublicKeyBase58Check: localStorage.getItem('login_key'),\n      MessageText: 'Ogres are like onions.'\n    },\n    method: deso.social.sendMessage,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.sendMessage(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Send a message from your account to another\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  UPDATE_PROFILE: {\n    parentRoute: ParentRoutes.social,\n    title: 'Update Profile',\n    route: '/social/update-profile',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api'],\n    params: {\n      UpdaterPublicKeyBase58Check: localStorage.getItem('login_key'),\n      MinFeeRateNanosPerKB: 1000,\n      NewDescription: 'WOOF WOOF'\n    },\n    method: deso.social.updateProfile,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.updateProfile(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Modify an accounts profile data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  SEND_DIAMONDS: {\n    parentRoute: ParentRoutes.social,\n    title: 'Send Diamonds',\n    route: '/social/send-diamond',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#send-diamonds'],\n    params: {\n      ReceiverPublicKeyBase58Check: DEZO_DOG,\n      SenderPublicKeyBase58Check: localStorage.getItem('login_key'),\n      DiamondPostHashHex: DOGS_LOVE_DIAMONDS_POST,\n      DiamondLevel: 1,\n      MinFeeRateNanosPerKB: 1000,\n      InTutorial: false\n    },\n    method: deso.social.sendDiamonds,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.sendDiamonds(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"diamond a post.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  CREATE_LIKE_STATELESS: {\n    parentRoute: ParentRoutes.social,\n    title: 'Create Like Stateless',\n    route: '/social/like',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#like'],\n    params: {\n      ReaderPublicKeyBase58Check: localStorage.getItem('login_key'),\n      LikedPostHashHex: 'f7ea512c2435f233c948f761f7596d95190ed3c3c908fc21609535eca33e3a14',\n      MinFeeRateNanosPerKB: 1000,\n      IsUnlike: false\n    },\n    method: deso.social.createLikeStateless,\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.social.createLikeStateless(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(CommonPageSectionTitles.OVERVIEW, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Like a post.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/chapters/ChapterHelper/SocialChapter.tsx"],"names":["Deso","Route","DEZO_DOG","DOGS_LOVE_DIAMONDS_POST","ParentRoutes","TYLER","Page","CHAPTERS","CommonPageSectionTitles","PageSection","deso","socialChapter","GET_FOLLOWS_STATELESS","parentRoute","social","title","route","params","PublicKeyBase58Check","NumToFetch","method","getFollowsStateless","documentation","githubSource","component","methodName","OVERVIEW","GET_MESSAGE_STATELESS","localStorage","getItem","FetchAfterPublicKeyBase58Check","HoldersOnly","FollowersOnly","FollowingOnly","HoldingsOnly","SortAlgorithm","getMessagesStateless","CREATE_FOLLOW_TRANSACTION","IsUnfollow","FollowedPublicKeyBase58Check","FollowerPublicKeyBase58Check","createFollowTxnStateless","GET_HODLERS_FOR_PUBLIC_KEY","getHodlersForPublicKey","GET_DIAMONDS_FOR_PUBLIC_KEY","getDiamondsForPublicKey","IS_FOLLOWING_PUBLIC_KEY","IsFollowingPublicKeyBase58Check","isFollowingPublicKey","IS_HODLING_PUBLIC_KEY","IsHodlingPublicKeyBase58Check","IsDAOCoin","isHodlingPublicKey","SEND_MESSAGE","RecipientPublicKeyBase58Check","SenderPublicKeyBase58Check","MessageText","sendMessage","UPDATE_PROFILE","UpdaterPublicKeyBase58Check","MinFeeRateNanosPerKB","NewDescription","updateProfile","SEND_DIAMONDS","ReceiverPublicKeyBase58Check","DiamondPostHashHex","DiamondLevel","InTutorial","sendDiamonds","CREATE_LIKE_STATELESS","ReaderPublicKeyBase58Check","LikedPostHashHex","IsUnlike","createLikeStateless"],"mappings":"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","sourcesContent":["import Deso from 'deso-protocol';\r\nimport {\r\n  CreateFollowTxnStatelessRequest,\r\n  CreateLikeStatelessRequest,\r\n  GetFollowsStatelessRequest,\r\n  GetHodlersForPublicKeyRequest,\r\n  GetMessagesStatelessRequest,\r\n  IsFollowingPublicKeyRequest,\r\n  IsHodlingPublicKeyRequest,\r\n  SendDiamondsRequest,\r\n  SendMessageStatelessRequest,\r\n  UpdateProfileRequest,\r\n} from 'deso-protocol-types';\r\nimport { Route } from 'react-router-dom';\r\nimport {\r\n  DEZO_DOG,\r\n  DOGS_LOVE_DIAMONDS_POST,\r\n  ParentRoutes,\r\n  TYLER,\r\n} from '../../services/utils';\r\nimport Page from '../Read/Page';\r\nimport { CHAPTERS } from './Chapter.models';\r\nimport { CommonPageSectionTitles, PageSection } from './PageSections';\r\nconst deso = new Deso();\r\nexport const socialChapter = {\r\n  GET_FOLLOWS_STATELESS: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Get Follows Stateless',\r\n    route: '/social/get-follows-stateless',\r\n    params: {\r\n      PublicKeyBase58Check: DEZO_DOG,\r\n      NumToFetch: 20,\r\n    } as GetFollowsStatelessRequest,\r\n    method: deso.social.getFollowsStateless,\r\n    documentation: [\r\n      'https://docs.deso.org/backend/blockchain-data/api/social-endpoints#get-follows-stateless',\r\n    ],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.posts.getFollowsStateless(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>\r\n                  Similar to the get-users-stateless, but Instead it will return\r\n                  an array of followers for a specific account.{' '}\r\n                </div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_MESSAGE_STATELESS: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Get Message Stateless',\r\n    route: '/social/get-message-stateless',\r\n    documentation: [],\r\n    githubSource: [],\r\n    params: {\r\n      NumToFetch: 25,\r\n      PublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      FetchAfterPublicKeyBase58Check: '',\r\n      HoldersOnly: false,\r\n      FollowersOnly: false,\r\n      FollowingOnly: false,\r\n      HoldingsOnly: false,\r\n      SortAlgorithm: 'time',\r\n    } as GetMessagesStatelessRequest,\r\n    method: deso.social.getMessagesStateless,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.getMessagesStateless(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>\r\n                  Similar to the get-users-stateless, but Instead it will return\r\n                  an array of followers for a specific account.{' '}\r\n                </div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  CREATE_FOLLOW_TRANSACTION: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Create Follow Transaction',\r\n    route: '/social/create-follow-transaction',\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#create-follow-txn-stateless',\r\n    ],\r\n    githubSource: [],\r\n    params: {\r\n      IsUnfollow: true,\r\n      FollowedPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      FollowerPublicKeyBase58Check: TYLER,\r\n    } as CreateFollowTxnStatelessRequest,\r\n    method: deso.social.createFollowTxnStateless,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.createFollowTxnStateless(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>Follow or unfollow a specific user</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_HODLERS_FOR_PUBLIC_KEY: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Get Hodlers For Public Key',\r\n    route: '/social/get-hodlers-for-public-key',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/social-endpoints#get-hodlers-for-public-key',\r\n    ],\r\n    params: {\r\n      NumToFetch: 20,\r\n      PublicKeyBase58Check: TYLER,\r\n    } as GetHodlersForPublicKeyRequest,\r\n    method: deso.social.getHodlersForPublicKey,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.getHodlersForPublicKey(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div></div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_DIAMONDS_FOR_PUBLIC_KEY: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Get Diamonds For Public Key',\r\n    route: '/social/get_diamonds_for_public_key',\r\n    githubSource: [],\r\n    documentation: [\r\n      'Get a list of objects representing all the diamonds a user has given or received.',\r\n    ],\r\n    params: {\r\n      NumToFetch: 20,\r\n      PublicKeyBase58Check: TYLER,\r\n    } as GetHodlersForPublicKeyRequest,\r\n    method: deso.social.getDiamondsForPublicKey,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.getDiamondsForPublicKey(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>Gets diamonds that </div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  IS_FOLLOWING_PUBLIC_KEY: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Is Following Public Key',\r\n    route: '/social/is-following-public-key',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/social-endpoints#is-following-public-key',\r\n    ],\r\n    params: {\r\n      PublicKeyBase58Check: TYLER,\r\n      IsFollowingPublicKeyBase58Check: DEZO_DOG,\r\n    } as IsFollowingPublicKeyRequest,\r\n    method: deso.social.isFollowingPublicKey,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.isFollowingPublicKey(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div> Determines if a user is following another.</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  IS_HODLING_PUBLIC_KEY: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Is Hodling Public Key',\r\n    route: '/social/is_hodling_public_key',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/social-endpoints#is-hodling-public-key',\r\n    ],\r\n    params: {\r\n      PublicKeyBase58Check: TYLER,\r\n      IsHodlingPublicKeyBase58Check: DEZO_DOG,\r\n      IsDAOCoin: false,\r\n    } as IsHodlingPublicKeyRequest,\r\n    method: deso.social.isHodlingPublicKey,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.isHodlingPublicKey(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>\r\n                  Check if the user holds the creator coin of a public key. If\r\n                  user is holding some amount of creator coin, we return the\r\n                  BalanceEntryResponse representing how much the user holds.\r\n                </div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  SEND_MESSAGE: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Send Message',\r\n    route: '/social/send-message-stateless',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#send-message',\r\n    ],\r\n    params: {\r\n      RecipientPublicKeyBase58Check: DEZO_DOG,\r\n      SenderPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      MessageText: 'Ogres are like onions.',\r\n    } as SendMessageStatelessRequest,\r\n    method: deso.social.sendMessage,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.sendMessage(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>Send a message from your account to another</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  UPDATE_PROFILE: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Update Profile',\r\n    route: '/social/update-profile',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api',\r\n    ],\r\n    params: {\r\n      UpdaterPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      MinFeeRateNanosPerKB: 1000,\r\n      NewDescription: 'WOOF WOOF',\r\n    } as UpdateProfileRequest,\r\n    method: deso.social.updateProfile,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.updateProfile(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>Modify an accounts profile data</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  SEND_DIAMONDS: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Send Diamonds',\r\n    route: '/social/send-diamond',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#send-diamonds',\r\n    ],\r\n    params: {\r\n      ReceiverPublicKeyBase58Check: DEZO_DOG,\r\n      SenderPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      DiamondPostHashHex: DOGS_LOVE_DIAMONDS_POST,\r\n      DiamondLevel: 1,\r\n      MinFeeRateNanosPerKB: 1000,\r\n      InTutorial: false,\r\n    } as SendDiamondsRequest,\r\n    method: deso.social.sendDiamonds,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.sendDiamonds(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>diamond a post.</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  CREATE_LIKE_STATELESS: {\r\n    parentRoute: ParentRoutes.social,\r\n    title: 'Create Like Stateless',\r\n    route: '/social/like',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/social-transactions-api#like',\r\n    ],\r\n    params: {\r\n      ReaderPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n      LikedPostHashHex:\r\n        'f7ea512c2435f233c948f761f7596d95190ed3c3c908fc21609535eca33e3a14',\r\n      MinFeeRateNanosPerKB: 1000,\r\n      IsUnlike: false,\r\n    } as CreateLikeStatelessRequest,\r\n    method: deso.social.createLikeStateless,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.social.createLikeStateless(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                CommonPageSectionTitles.OVERVIEW,\r\n                <div>Like a post.</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}