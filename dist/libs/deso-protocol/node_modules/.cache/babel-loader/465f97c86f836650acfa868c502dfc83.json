{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\chapters\\\\ChapterHelper\\\\notificationChapter.tsx\";\nimport Deso from 'deso-protocol';\nimport { Route } from 'react-router-dom';\nimport { DEZO_DOG, ParentRoutes, TYLER } from '../../services/utils';\nimport Page from '../Read/Page';\nimport { CHAPTERS } from './Chapter.models';\nimport { PageSection } from './PageSections';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deso = new Deso();\nexport const notificationChapter = {\n  GET_NOTIFICATIONS: {\n    parentRoute: ParentRoutes.notification,\n    title: 'Get Notifications',\n    route: '/notification/get-notifications',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/notification-endpoints#get-notifications'],\n    method: deso.notification.getNotifications,\n    params: {\n      NumToFetch: 50,\n      PublicKeyBase58Check: TYLER,\n      FetchStartIndex: 100\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.notifications.getNotifications(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Fetches notifications for an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_UNREAD_NOTIFICATION_COUNT: {\n    parentRoute: ParentRoutes.notification,\n    title: 'Get Unread Notification Count',\n    route: '/notification/get-unread-notifications-count',\n    method: deso.notification.getUnreadNotificationsCount,\n    params: {\n      PublicKeyBase58Check: DEZO_DOG\n    },\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/notification-endpoints#get-unread-notification-count'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.notification.getUnreadNotificationsCount(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gets the number of unread notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  SET_NOTIFICATION_METADATA: {\n    parentRoute: ParentRoutes.notification,\n    title: 'Set Notification Metadata',\n    route: '/notification/set-notification-metadata',\n    githubSource: [],\n    documentation: ['http://localhost:4200/#/notification/set-notification-metadata'],\n    method: deso.notification.setNotificationMetadata,\n    params: {\n      PublicKeyBase58Check: localStorage.getItem('login_key')\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.notification.setNotificationMetadata(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Update the number of unread notifications, the last notification seen index, and the last unread notification index.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/chapters/ChapterHelper/notificationChapter.tsx"],"names":["Deso","Route","DEZO_DOG","ParentRoutes","TYLER","Page","CHAPTERS","PageSection","deso","notificationChapter","GET_NOTIFICATIONS","parentRoute","notification","title","route","githubSource","documentation","method","getNotifications","params","NumToFetch","PublicKeyBase58Check","FetchStartIndex","component","methodName","GET_UNREAD_NOTIFICATION_COUNT","getUnreadNotificationsCount","SET_NOTIFICATION_METADATA","setNotificationMetadata","localStorage","getItem"],"mappings":"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","sourcesContent":["import Deso from 'deso-protocol';\r\nimport {\r\n  GetNotificationsCountRequest,\r\n  GetNotificationsRequest,\r\n  SetNotificationMetadataRequest,\r\n} from 'deso-protocol-types';\r\nimport { Route } from 'react-router-dom';\r\nimport { DEZO_DOG, ParentRoutes, TYLER } from '../../services/utils';\r\nimport Page from '../Read/Page';\r\nimport { CHAPTERS } from './Chapter.models';\r\nimport { PageSection } from './PageSections';\r\nconst deso = new Deso();\r\n\r\nexport const notificationChapter = {\r\n  GET_NOTIFICATIONS: {\r\n    parentRoute: ParentRoutes.notification,\r\n    title: 'Get Notifications',\r\n    route: '/notification/get-notifications',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/notification-endpoints#get-notifications',\r\n    ],\r\n    method: deso.notification.getNotifications,\r\n    params: {\r\n      NumToFetch: 50,\r\n      PublicKeyBase58Check: TYLER,\r\n      FetchStartIndex: 100,\r\n    } as GetNotificationsRequest,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.notifications.getNotifications(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Fetches notifications for an account</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_UNREAD_NOTIFICATION_COUNT: {\r\n    parentRoute: ParentRoutes.notification,\r\n    title: 'Get Unread Notification Count',\r\n    route: '/notification/get-unread-notifications-count',\r\n    method: deso.notification.getUnreadNotificationsCount,\r\n    params: {\r\n      PublicKeyBase58Check: DEZO_DOG,\r\n    } as Partial<GetNotificationsCountRequest>,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/notification-endpoints#get-unread-notification-count',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.notification.getUnreadNotificationsCount(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Gets the number of unread notifications</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  SET_NOTIFICATION_METADATA: {\r\n    parentRoute: ParentRoutes.notification,\r\n    title: 'Set Notification Metadata',\r\n    route: '/notification/set-notification-metadata',\r\n    githubSource: [],\r\n    documentation: [\r\n      'http://localhost:4200/#/notification/set-notification-metadata',\r\n    ],\r\n    method: deso.notification.setNotificationMetadata,\r\n    params: {\r\n      PublicKeyBase58Check: localStorage.getItem('login_key'),\r\n    } as Partial<SetNotificationMetadataRequest>,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.notification.setNotificationMetadata(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Update the number of unread notifications, the last\r\n                  notification seen index, and the last unread notification\r\n                  index.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}