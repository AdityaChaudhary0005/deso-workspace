{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\chapters\\\\ChapterHelper\\\\UserChapter.tsx\";\nimport { Route } from 'react-router-dom';\nimport { CHAPTERS } from './Chapter.models';\nimport { Page } from '../Read/Page';\nimport { PageSection } from './PageSections';\nimport { DEZO_DOG, ParentRoutes, RUSSIA } from '../../services/utils';\nimport Deso from 'deso-protocol';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deso = new Deso(); // deso.user.getSingleProfile;\n// deso.user.getSingleProfilePicture;\n\nexport const userChapter = {\n  GET_USERS_STATELESS: {\n    parentRoute: ParentRoutes.user,\n    title: 'Get Users Stateless',\n    route: '/user/get-users-stateless',\n    method: deso.user.getUserStateless,\n    params: {\n      PublicKeysBase58Check: [DEZO_DOG]\n    },\n    documentation: ['https://docs.deso.org/backend/blockchain-data/api/user-endpoints#get-users-stateless'],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          method: {\n            methodName: `deso.user.getUserStateless(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Will query information on an existing user or users.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)),\n          tabs: [],\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_SINGLE_PROFILE: {\n    parentRoute: ParentRoutes.user,\n    title: 'Get Single Profile',\n    route: '/get-single-profile',\n    method: deso.user.getSingleProfile,\n    params: {\n      PublicKeyBase58Check: DEZO_DOG\n    },\n    documentation: ['https://docs.deso.org/backend/blockchain-data/api/user-endpoints#get-single-profile'],\n    githubSource: [],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.getSingleProfile(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"As it sounds get-single-profile, fetches various data around a single profile. This call is useful if you want common display data for a user.\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_PROFILES: {\n    parentRoute: ParentRoutes.user,\n    title: 'Get Profiles',\n    route: '/user/get-profiles',\n    params: {\n      PublicKeyBase58Check: DEZO_DOG\n    },\n    method: deso.user.getProfiles,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-profiles'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.getProfiles(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gets the profiles following a specific user.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_SINGLE_PROFILE_PICTURE: {\n    parentRoute: ParentRoutes.user,\n    title: 'Get Single Profile Picture',\n    route: '/user/get-single-profile-picture',\n    params: DEZO_DOG,\n    method: deso.user.getSingleProfilePicture,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-single-profile-picture'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.getSingleProfilePicture(request)`,\n            params: this.params,\n            method: this.method,\n            customResponse: () => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: deso.user.getSingleProfilePicture(DEZO_DOG),\n              alt: \"sample\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gets the profile picture for a specific account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_USER_METADATA: {\n    parentRoute: ParentRoutes.user,\n    title: 'Get User Metadata',\n    route: '/user/get-user-metadata',\n    params: {\n      PublicKeyBase58Check: DEZO_DOG,\n      jwt: 'jwt'\n    },\n    method: deso.user.getUserMetadata,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-user-metadata'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.getUserMetadata(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gets metadata for a specific user.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  DELETE_PII: {\n    parentRoute: ParentRoutes.user,\n    title: 'Delete Pii',\n    route: '/user/delete-pii',\n    params: {\n      PublicKeyBase58Check: DEZO_DOG\n    },\n    method: deso.user.deletePii,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#delete-pii-personal-identifiable-information'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.deletePii(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Delete personal information such as email and phone number from the account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  BLOCK_PUBLIC_KEY: {\n    parentRoute: ParentRoutes.user,\n    title: 'Block Public Key',\n    route: '/user/block-public-key',\n    params: {\n      PublicKeyBase58Check: DEZO_DOG,\n      BlockPublicKeyBase58Check: RUSSIA\n    },\n    method: deso.user.blockPublicKey,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#block-public-key'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.blockPublicKey(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Block a specific account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_USER_DERIVED_KEYS: {\n    parentRoute: ParentRoutes.user,\n    title: 'Get User Derived Keys',\n    route: '/user/get-user-derived-keys',\n    params: {\n      PublicKeyBase58Check: DEZO_DOG\n    },\n    method: deso.user.getUserDerivedKeys,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-user-derived-keys'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.getUserDerivedKeys(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get a map of derived public keys to metadata about that derived key for a given master public key.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  DELETE_IDENTITIES: {\n    parentRoute: ParentRoutes.user,\n    title: 'Delete Identities',\n    route: '/user/delete_identities',\n    params: undefined,\n    method: deso.user.getUserDerivedKeys,\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#delete-identities'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: `deso.user.getUserDerivedKeys(request)`,\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get a map of derived public keys to metadata about that derived key for a given master public key.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/chapters/ChapterHelper/UserChapter.tsx"],"names":["Route","CHAPTERS","Page","PageSection","DEZO_DOG","ParentRoutes","RUSSIA","Deso","deso","userChapter","GET_USERS_STATELESS","parentRoute","user","title","route","method","getUserStateless","params","PublicKeysBase58Check","documentation","githubSource","component","methodName","GET_SINGLE_PROFILE","getSingleProfile","PublicKeyBase58Check","GET_PROFILES","getProfiles","GET_SINGLE_PROFILE_PICTURE","getSingleProfilePicture","customResponse","GET_USER_METADATA","jwt","getUserMetadata","DELETE_PII","deletePii","BLOCK_PUBLIC_KEY","BlockPublicKeyBase58Check","blockPublicKey","GET_USER_DERIVED_KEYS","getUserDerivedKeys","DELETE_IDENTITIES","undefined"],"mappings":"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","sourcesContent":["import { Route } from 'react-router-dom';\r\nimport { CHAPTERS, TODOTemplate } from './Chapter.models';\r\nimport { Page } from '../Read/Page';\r\nimport { PageSection } from './PageSections';\r\nimport { DEZO_DOG, ParentRoutes, RUSSIA } from '../../services/utils';\r\nimport Deso from 'deso-protocol';\r\nimport {\r\n  GetSingleProfileRequest,\r\n  GetUsersStatelessRequest,\r\n  GetProfilesRequest,\r\n  GetUserMetadataRequest,\r\n  DeletePIIRequest,\r\n  BlockPublicKeyRequest,\r\n} from 'deso-protocol-types';\r\nconst deso = new Deso();\r\n// deso.user.getSingleProfile;\r\n// deso.user.getSingleProfilePicture;\r\nexport const userChapter = {\r\n  GET_USERS_STATELESS: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Get Users Stateless',\r\n    route: '/user/get-users-stateless',\r\n    method: deso.user.getUserStateless,\r\n    params: {\r\n      PublicKeysBase58Check: [DEZO_DOG],\r\n    } as GetUsersStatelessRequest,\r\n    documentation: [\r\n      'https://docs.deso.org/backend/blockchain-data/api/user-endpoints#get-users-stateless',\r\n    ],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              method={{\r\n                methodName: `deso.user.getUserStateless(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Will query information on an existing user or users.</div>\r\n              )}\r\n              tabs={[]}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_SINGLE_PROFILE: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Get Single Profile',\r\n    route: '/get-single-profile',\r\n    method: deso.user.getSingleProfile,\r\n    params: {\r\n      PublicKeyBase58Check: DEZO_DOG,\r\n    } as GetSingleProfileRequest,\r\n    documentation: [\r\n      'https://docs.deso.org/backend/blockchain-data/api/user-endpoints#get-single-profile',\r\n    ],\r\n    githubSource: [],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.getSingleProfile(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  As it sounds get-single-profile, fetches various data around a\r\n                  single profile. This call is useful if you want common display\r\n                  data for a user.{' '}\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_PROFILES: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Get Profiles',\r\n    route: '/user/get-profiles',\r\n    params: { PublicKeyBase58Check: DEZO_DOG } as GetProfilesRequest,\r\n    method: deso.user.getProfiles,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-profiles',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.getProfiles(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Gets the profiles following a specific user.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n\r\n  GET_SINGLE_PROFILE_PICTURE: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Get Single Profile Picture',\r\n    route: '/user/get-single-profile-picture',\r\n    params: DEZO_DOG,\r\n    method: deso.user.getSingleProfilePicture,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-single-profile-picture',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.getSingleProfilePicture(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n                customResponse: () => (\r\n                  <img\r\n                    src={deso.user.getSingleProfilePicture(DEZO_DOG)}\r\n                    alt=\"sample\"\r\n                  />\r\n                ),\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Gets the profile picture for a specific account.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n\r\n  GET_USER_METADATA: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Get User Metadata',\r\n    route: '/user/get-user-metadata',\r\n    params: {\r\n      PublicKeyBase58Check: DEZO_DOG,\r\n      jwt: 'jwt',\r\n    } as GetUserMetadataRequest,\r\n    method: deso.user.getUserMetadata,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-user-metadata',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.getUserMetadata(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Gets metadata for a specific user.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  DELETE_PII: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Delete Pii',\r\n    route: '/user/delete-pii',\r\n    params: { PublicKeyBase58Check: DEZO_DOG } as DeletePIIRequest,\r\n    method: deso.user.deletePii,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#delete-pii-personal-identifiable-information',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.deletePii(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Delete personal information such as email and phone number\r\n                  from the account\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n\r\n  BLOCK_PUBLIC_KEY: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Block Public Key',\r\n    route: '/user/block-public-key',\r\n    params: {\r\n      PublicKeyBase58Check: DEZO_DOG,\r\n      BlockPublicKeyBase58Check: RUSSIA,\r\n    } as BlockPublicKeyRequest,\r\n    method: deso.user.blockPublicKey,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#block-public-key',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.blockPublicKey(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Block a specific account.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_USER_DERIVED_KEYS: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Get User Derived Keys',\r\n    route: '/user/get-user-derived-keys',\r\n    params: {\r\n      PublicKeyBase58Check: DEZO_DOG,\r\n    } as BlockPublicKeyRequest,\r\n    method: deso.user.getUserDerivedKeys,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#get-user-derived-keys',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.getUserDerivedKeys(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Get a map of derived public keys to metadata about that\r\n                  derived key for a given master public key.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  DELETE_IDENTITIES: {\r\n    parentRoute: ParentRoutes.user,\r\n    title: 'Delete Identities',\r\n    route: '/user/delete_identities',\r\n    params: undefined,\r\n    method: deso.user.getUserDerivedKeys,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/user-endpoints#delete-identities',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: `deso.user.getUserDerivedKeys(request)`,\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Get a map of derived public keys to metadata about that\r\n                  derived key for a given master public key.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}