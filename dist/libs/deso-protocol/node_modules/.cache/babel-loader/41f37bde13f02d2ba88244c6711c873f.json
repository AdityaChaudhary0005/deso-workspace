{"ast":null,"code":"import \"core-js/modules/es.promise.js\";\nimport axios from 'axios';\nexport class Nft {\n  constructor(node, identity) {\n    this.node = void 0;\n    this.identity = void 0;\n    this.node = node;\n    this.identity = identity;\n  }\n\n  async getNftsForUser(request) {\n    const endpoint = 'get-nfts-for-user';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getNftBidsForUser(request) {\n    const endpoint = 'get-nft-bids-for-user';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getNftBidsForNftPost(request) {\n    const endpoint = 'get-nft-bids-for-nft-post';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getNftShowcase(request) {\n    const endpoint = 'get-nft-showcase';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getNextNftShowCase(request) {\n    const endpoint = 'get-next-nft-showcase';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getNftCollectionSummary(request) {\n    const endpoint = 'get-nft-collection-summary';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async getNftEntriesForPostHash(request) {\n    const endpoint = 'get-nft-entries-for-nft-post';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async createNft(request) {\n    const endpoint = 'create-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async updateNft(request) {\n    const endpoint = 'update-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async createNftBid(request) {\n    const endpoint = 'create-nft-request';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async acceptNftBid(request) {\n    const endpoint = 'create-nft-request';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async transferNft(request) {\n    const endpoint = 'transfer-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async acceptNftTransfer(request) {\n    const endpoint = 'accept-nft-transfer';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  async burnNft(request) {\n    const endpoint = 'burn-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/libs/deso-protocol/src/lib/nft/Nft.ts"],"names":["axios","Nft","constructor","node","identity","getNftsForUser","request","endpoint","post","getUri","getNftBidsForUser","getNftBidsForNftPost","getNftShowcase","getNextNftShowCase","getNftCollectionSummary","getNftEntriesForPostHash","createNft","updateNft","createNftBid","acceptNftBid","transferNft","acceptNftTransfer","burnNft"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  AcceptNFTBidRequest,\n  AcceptNFTBidResponse,\n  AcceptNFTTransferRequest,\n  BurnNFTRequest,\n  BurnNFTResponse,\n  CreateNFTBidRequest,\n  CreateNFTBidResponse,\n  CreateNFTRequest,\n  CreateNFTResponse,\n  GetNextNFTShowcaseResponse,\n  GetNFTBidsForNFTPostRequest,\n  GetNFTBidsForNFTPostResponse,\n  GetNFTBidsForUserRequest,\n  GetNFTBidsForUserResponse,\n  GetNFTCollectionSummaryRequest,\n  GetNFTCollectionSummaryResponse,\n  GetNFTEntriesForPostHashRequest,\n  GetNFTEntriesForPostHashResponse,\n  GetNFTsForUserRequest,\n  GetNFTsForUserResponse,\n  GetNFTShowcaseRequest,\n  GetNFTShowcaseResponse,\n  TransferNFTRequest,\n  TransferNFTResponse,\n  UpdateNFTRequest,\n  UpdateNFTResponse,\n} from 'deso-protocol-types';\nimport { Node } from '../Node/Node';\nimport { Identity } from '../identity/Identity';\n\nexport class Nft {\n  node: Node;\n  identity: Identity;\n  constructor(node: Node, identity: Identity) {\n    this.node = node;\n    this.identity = identity;\n  }\n\n  public async getNftsForUser(\n    request: Partial<GetNFTsForUserRequest>\n  ): Promise<GetNFTsForUserResponse> {\n    const endpoint = 'get-nfts-for-user';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getNftBidsForUser(\n    request: Partial<GetNFTBidsForUserRequest>\n  ): Promise<GetNFTBidsForUserResponse> {\n    const endpoint = 'get-nft-bids-for-user';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getNftBidsForNftPost(\n    request: Partial<GetNFTBidsForNFTPostRequest>\n  ): Promise<GetNFTBidsForNFTPostResponse> {\n    const endpoint = 'get-nft-bids-for-nft-post';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getNftShowcase(\n    request: Partial<GetNFTShowcaseRequest>\n  ): Promise<GetNFTShowcaseResponse> {\n    const endpoint = 'get-nft-showcase';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getNextNftShowCase(\n    request: Partial<GetNFTShowcaseRequest>\n  ): Promise<GetNextNFTShowcaseResponse> {\n    const endpoint = 'get-next-nft-showcase';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getNftCollectionSummary(\n    request: Partial<GetNFTCollectionSummaryRequest>\n  ): Promise<GetNFTCollectionSummaryResponse> {\n    const endpoint = 'get-nft-collection-summary';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async getNftEntriesForPostHash(\n    request: Partial<GetNFTEntriesForPostHashRequest>\n  ): Promise<GetNFTEntriesForPostHashResponse> {\n    const endpoint = 'get-nft-entries-for-nft-post';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async createNft(\n    request: Partial<CreateNFTRequest>\n  ): Promise<CreateNFTResponse> {\n    const endpoint = 'create-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async updateNft(\n    request: Partial<UpdateNFTRequest>\n  ): Promise<UpdateNFTResponse> {\n    const endpoint = 'update-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async createNftBid(\n    request: Partial<CreateNFTBidRequest>\n  ): Promise<CreateNFTBidResponse> {\n    const endpoint = 'create-nft-request';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async acceptNftBid(\n    request: Partial<AcceptNFTBidRequest>\n  ): Promise<AcceptNFTBidResponse> {\n    const endpoint = 'create-nft-request';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async transferNft(\n    request: Partial<TransferNFTRequest>\n  ): Promise<TransferNFTResponse> {\n    const endpoint = 'transfer-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async acceptNftTransfer(\n    request: Partial<AcceptNFTTransferRequest>\n  ): Promise<TransferNFTResponse> {\n    const endpoint = 'accept-nft-transfer';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n\n  public async burnNft(\n    request: Partial<BurnNFTRequest>\n  ): Promise<BurnNFTResponse> {\n    const endpoint = 'burn-nft';\n    return await axios.post(`${this.node.getUri()}/${endpoint}`, request);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}