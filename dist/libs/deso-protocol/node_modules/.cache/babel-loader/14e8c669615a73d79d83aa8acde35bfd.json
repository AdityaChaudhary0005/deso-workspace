{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\Documents\\\\DeSo\\\\deso-workspace\\\\apps\\\\developer-hub\\\\src\\\\chapters\\\\ChapterHelper\\\\nftChapter.tsx\";\nimport { Route } from 'react-router-dom';\nimport { CHAPTERS } from './Chapter.models';\nimport Deso from 'deso-protocol';\nimport { ParentRoutes, TYLER, DEZO_DOG, SAMPLE_POST } from '../../services/utils';\nimport Page from '../Read/Page';\nimport { PageSection } from './PageSections';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst deso = new Deso();\nexport const nftChapter = {\n  GET_NFTS_FOR_USER: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Nfts For User',\n    route: '/nft/get-nfts-for-user',\n    method: deso.nft.getNftsForUser,\n    params: {\n      UserPublicKeyBase58Check: TYLER\n    },\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nfts-for-user'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNftsForUser(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get the nfts that belongs to an account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_NFT_BIDS_FOR_USER: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Nft Bids For User',\n    route: '/nft/get-nft-bids-for-user',\n    method: deso.nft.getNftBidsForUser,\n    params: {\n      UserPublicKeyBase58Check: DEZO_DOG\n    },\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-bids-for-user'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNftBidsForUser(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get active bids for a user.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_NFT_BIDS_FOR_NFT_POST: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Nft Bids For Nft Post',\n    route: '/nft/get-nft-bids-for-nft-post',\n    githubSource: [],\n    method: deso.nft.getNftBidsForNftPost,\n    params: {\n      PostHashHex: SAMPLE_POST\n    },\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-bids-for-nft-post'],\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNftBidsForNftPost(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get all bids for all serial numbers of a given post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_NFT_SHOWCASE: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Nft Showcase',\n    route: '/nft/get-nft-showcase',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-showcase'],\n    method: deso.nft.getNftShowcase,\n    params: {\n      ReaderPublicKeyBase58Check: DEZO_DOG\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNftShowcase(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get summaries of all NFTs included in the NFT showcase.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_NEXT_NFT_SHOWCASE: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Next Nft Showcase',\n    route: '/nft/get-next-nft-showcase',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-next-nft-showcase'],\n    method: deso.nft.getNextNftShowCase,\n    params: {\n      ReaderPublicKeyBase58Check: TYLER\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNextNftShowCase(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get the time of the next NFT showcase drop.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_NFT_COLLECTION_SUMMARY: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Nft Collection Summary',\n    route: '/nft/get-nft-collection-summary',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-collection-summary'],\n    method: deso.nft.getNftCollectionSummary,\n    params: {\n      PostHashHex: SAMPLE_POST\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNftCollectionSummary(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Get information on a NFT collection.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this);\n    }\n  },\n  GET_NFT_ENTRIES_FOR_POST_HASH: {\n    parentRoute: ParentRoutes.nft,\n    title: 'Get Nft Entries For Post Hash',\n    route: '/nft/get-nft-entries-for-post-hash',\n    githubSource: [],\n    documentation: ['https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-entries-for-post-hash'],\n    method: deso.nft.getNftEntriesForPostHash,\n    params: {\n      PostHashHex: SAMPLE_POST\n    },\n    component: function () {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: this.route,\n        element: /*#__PURE__*/_jsxDEV(Page, {\n          tabs: [],\n          method: {\n            methodName: 'deso.nft.getNftEntriesForPostHash(request)',\n            params: this.params,\n            method: this.method\n          },\n          pretext: PageSection(this.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Gets an NFT entry response for each serial number of this NFT post.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)),\n          chapters: CHAPTERS,\n          selectedChapter: this\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, this.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this);\n    }\n  } // CREATE_NFT: {\n  //   parentRoute: ParentRoutes.nft,\n  //   title: 'Create Nft',\n  //   route: '/nft/',\n  //   githubSource: [],\n  //   documentation: [\n  //     'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/nft-transactions-api#create-nft',\n  //   ],\n  //   method: deso.nft.getNftEntriesForPostHash,\n  //   params: {\n  //     // UpdaterPublicKeyBase58Check: localStorage.getItem('login_key'),\n  //     // NFTPostHashHex: '',\n  //     // NumCopies: 1,\n  //     // NFTRoyaltyToCreatorBasisPoints: 100,\n  //     // NFTRoyaltyToCoinBasisPoints: 100,\n  //     // HasUnlockable: '',\n  //     // IsForSale: true,\n  //     // MinBidAmountNanos: '' ,\n  //     // IsBuyNow:''\n  //     // BuyNowPriceNanos: ''\n  //     // AdditionalDESORoyaltiesMap: {''},\n  //     // AdditionalCoinRoyaltiesMap: {},\n  //     // MinFeeRateNanosPerKB: 1000\n  //   } as CreateNFTRequest,\n  //   component: function () {\n  //     return (\n  //       <Route\n  //         key={this.title}\n  //         path={this.route}\n  //         element={\n  //           <Page\n  //             tabs={[]}\n  //             method={{\n  //               methodName: 'deso.nft.getNftEntriesForPostHash(request)',\n  //               params: this.params,\n  //               method: this.method,\n  //             }}\n  //             pretext={PageSection(\n  //               this.title,\n  //               <div>\n  //                 Gets an NFT entry response for each serial number of this NFT\n  //                 post.\n  //               </div>\n  //             )}\n  //             chapters={CHAPTERS}\n  //             selectedChapter={this}\n  //           />\n  //         }\n  //       ></Route>\n  //     );\n  //   },\n  // },\n\n};","map":{"version":3,"sources":["C:/Users/tyler/Documents/DeSo/deso-workspace/apps/developer-hub/src/chapters/ChapterHelper/nftChapter.tsx"],"names":["Route","CHAPTERS","Deso","ParentRoutes","TYLER","DEZO_DOG","SAMPLE_POST","Page","PageSection","deso","nftChapter","GET_NFTS_FOR_USER","parentRoute","nft","title","route","method","getNftsForUser","params","UserPublicKeyBase58Check","githubSource","documentation","component","methodName","GET_NFT_BIDS_FOR_USER","getNftBidsForUser","GET_NFT_BIDS_FOR_NFT_POST","getNftBidsForNftPost","PostHashHex","GET_NFT_SHOWCASE","getNftShowcase","ReaderPublicKeyBase58Check","GET_NEXT_NFT_SHOWCASE","getNextNftShowCase","GET_NFT_COLLECTION_SUMMARY","getNftCollectionSummary","GET_NFT_ENTRIES_FOR_POST_HASH","getNftEntriesForPostHash"],"mappings":";AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SACEC,YADF,EAEEC,KAFF,EAGEC,QAHF,EAIEC,WAJF,QAKO,sBALP;AAeA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AACA,MAAMC,IAAI,GAAG,IAAIP,IAAJ,EAAb;AAEA,OAAO,MAAMQ,UAAU,GAAG;AACxBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,WAAW,EAAET,YAAY,CAACU,GADT;AAEjBC,IAAAA,KAAK,EAAE,mBAFU;AAGjBC,IAAAA,KAAK,EAAE,wBAHU;AAIjBC,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASI,cAJA;AAKjBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,wBAAwB,EAAEf;AAA5B,KALS;AAMjBgB,IAAAA,YAAY,EAAE,EANG;AAOjBC,IAAAA,aAAa,EAAE,CACb,kGADa,CAPE;AAUjBC,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,kCADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAWE,UAAA,QAAQ,EAAEb,QAXZ;AAYE,UAAA,eAAe,EAAE;AAZnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD;AAjCgB,GADK;AAoCxBU,EAAAA,qBAAqB,EAAE;AACrBZ,IAAAA,WAAW,EAAET,YAAY,CAACU,GADL;AAErBC,IAAAA,KAAK,EAAE,uBAFc;AAGrBC,IAAAA,KAAK,EAAE,4BAHc;AAIrBC,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASY,iBAJI;AAKrBP,IAAAA,MAAM,EAAE;AAAEC,MAAAA,wBAAwB,EAAEd;AAA5B,KALa;AAMrBe,IAAAA,YAAY,EAAE,EANO;AAOrBC,IAAAA,aAAa,EAAE,CACb,sGADa,CAPM;AAUrBC,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,qCADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAWE,UAAA,QAAQ,EAAEb,QAXZ;AAYE,UAAA,eAAe,EAAE;AAZnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD;AAjCoB,GApCC;AAuExBY,EAAAA,yBAAyB,EAAE;AACzBd,IAAAA,WAAW,EAAET,YAAY,CAACU,GADD;AAEzBC,IAAAA,KAAK,EAAE,2BAFkB;AAGzBC,IAAAA,KAAK,EAAE,gCAHkB;AAIzBK,IAAAA,YAAY,EAAE,EAJW;AAKzBJ,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASc,oBALQ;AAMzBT,IAAAA,MAAM,EAAE;AAAEU,MAAAA,WAAW,EAAEtB;AAAf,KANiB;AAOzBe,IAAAA,aAAa,EAAE,CACb,0GADa,CAPU;AAUzBC,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,wCADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAWE,UAAA,QAAQ,EAAEb,QAXZ;AAYE,UAAA,eAAe,EAAE;AAZnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD;AAjCwB,GAvEH;AA0GxBe,EAAAA,gBAAgB,EAAE;AAChBjB,IAAAA,WAAW,EAAET,YAAY,CAACU,GADV;AAEhBC,IAAAA,KAAK,EAAE,kBAFS;AAGhBC,IAAAA,KAAK,EAAE,uBAHS;AAIhBK,IAAAA,YAAY,EAAE,EAJE;AAKhBC,IAAAA,aAAa,EAAE,CACb,iGADa,CALC;AAQhBL,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASiB,cARD;AAShBZ,IAAAA,MAAM,EAAE;AAAEa,MAAAA,0BAA0B,EAAE1B;AAA9B,KATQ;AAUhBiB,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,kCADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAaE,UAAA,QAAQ,EAAEb,QAbZ;AAcE,UAAA,eAAe,EAAE;AAdnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAwBD;AAnCe,GA1GM;AA+IxBkB,EAAAA,qBAAqB,EAAE;AACrBpB,IAAAA,WAAW,EAAET,YAAY,CAACU,GADL;AAErBC,IAAAA,KAAK,EAAE,uBAFc;AAGrBC,IAAAA,KAAK,EAAE,4BAHc;AAIrBK,IAAAA,YAAY,EAAE,EAJO;AAKrBC,IAAAA,aAAa,EAAE,CACb,sGADa,CALM;AAQrBL,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASoB,kBARI;AASrBf,IAAAA,MAAM,EAAE;AAAEa,MAAAA,0BAA0B,EAAE3B;AAA9B,KATa;AAUrBkB,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,sCADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAWE,UAAA,QAAQ,EAAEb,QAXZ;AAYE,UAAA,eAAe,EAAE;AAZnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD;AAjCoB,GA/IC;AAkLxBoB,EAAAA,0BAA0B,EAAE;AAC1BtB,IAAAA,WAAW,EAAET,YAAY,CAACU,GADA;AAE1BC,IAAAA,KAAK,EAAE,4BAFmB;AAG1BC,IAAAA,KAAK,EAAE,iCAHmB;AAI1BK,IAAAA,YAAY,EAAE,EAJY;AAK1BC,IAAAA,aAAa,EAAE,CACb,2GADa,CALW;AAQ1BL,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASsB,uBARS;AAS1BjB,IAAAA,MAAM,EAAE;AAAEU,MAAAA,WAAW,EAAEtB;AAAf,KATkB;AAU1BgB,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,2CADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAWE,UAAA,QAAQ,EAAEb,QAXZ;AAYE,UAAA,eAAe,EAAE;AAZnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD;AAjCyB,GAlLJ;AAqNxBsB,EAAAA,6BAA6B,EAAE;AAC7BxB,IAAAA,WAAW,EAAET,YAAY,CAACU,GADG;AAE7BC,IAAAA,KAAK,EAAE,+BAFsB;AAG7BC,IAAAA,KAAK,EAAE,oCAHsB;AAI7BK,IAAAA,YAAY,EAAE,EAJe;AAK7BC,IAAAA,aAAa,EAAE,CACb,8GADa,CALc;AAQ7BL,IAAAA,MAAM,EAAEP,IAAI,CAACI,GAAL,CAASwB,wBARY;AAS7BnB,IAAAA,MAAM,EAAE;AAAEU,MAAAA,WAAW,EAAEtB;AAAf,KATqB;AAU7BgB,IAAAA,SAAS,EAAE,YAAY;AACrB,0BACE,QAAC,KAAD;AAEE,QAAA,IAAI,EAAE,KAAKP,KAFb;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AACE,UAAA,IAAI,EAAE,EADR;AAEE,UAAA,MAAM,EAAE;AACNQ,YAAAA,UAAU,EAAE,4CADN;AAENL,YAAAA,MAAM,EAAE,KAAKA,MAFP;AAGNF,YAAAA,MAAM,EAAE,KAAKA;AAHP,WAFV;AAOE,UAAA,OAAO,EAAER,WAAW,CAClB,KAAKM,KADa,eAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFkB,CAPtB;AAcE,UAAA,QAAQ,EAAEb,QAdZ;AAeE,UAAA,eAAe,EAAE;AAfnB;AAAA;AAAA;AAAA;AAAA;AAJJ,SACO,KAAKa,KADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD;AApC4B,GArNP,CA4PxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/SwB,CAAnB","sourcesContent":["import { Route } from 'react-router-dom';\r\nimport { CHAPTERS } from './Chapter.models';\r\nimport Deso from 'deso-protocol';\r\nimport {\r\n  ParentRoutes,\r\n  TYLER,\r\n  DEZO_DOG,\r\n  SAMPLE_POST,\r\n} from '../../services/utils';\r\nimport {\r\n  CreateNFTRequest,\r\n  GetNFTBidsForNFTPostRequest,\r\n  GetNFTBidsForUserRequest,\r\n  GetNFTCollectionSummaryRequest,\r\n  GetNFTEntriesForPostHashRequest,\r\n  GetNFTsForUserRequest,\r\n  GetNFTShowcaseRequest,\r\n} from 'deso-protocol-types';\r\nimport Page from '../Read/Page';\r\nimport { PageSection } from './PageSections';\r\nconst deso = new Deso();\r\n\r\nexport const nftChapter = {\r\n  GET_NFTS_FOR_USER: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Nfts For User',\r\n    route: '/nft/get-nfts-for-user',\r\n    method: deso.nft.getNftsForUser,\r\n    params: { UserPublicKeyBase58Check: TYLER } as GetNFTsForUserRequest,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nfts-for-user',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNftsForUser(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Get the nfts that belongs to an account.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_NFT_BIDS_FOR_USER: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Nft Bids For User',\r\n    route: '/nft/get-nft-bids-for-user',\r\n    method: deso.nft.getNftBidsForUser,\r\n    params: { UserPublicKeyBase58Check: DEZO_DOG } as GetNFTBidsForUserRequest,\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-bids-for-user',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNftBidsForUser(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Get active bids for a user.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_NFT_BIDS_FOR_NFT_POST: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Nft Bids For Nft Post',\r\n    route: '/nft/get-nft-bids-for-nft-post',\r\n    githubSource: [],\r\n    method: deso.nft.getNftBidsForNftPost,\r\n    params: { PostHashHex: SAMPLE_POST } as GetNFTBidsForNFTPostRequest,\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-bids-for-nft-post',\r\n    ],\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNftBidsForNftPost(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Get all bids for all serial numbers of a given post</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_NFT_SHOWCASE: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Nft Showcase',\r\n    route: '/nft/get-nft-showcase',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-showcase',\r\n    ],\r\n    method: deso.nft.getNftShowcase,\r\n    params: { ReaderPublicKeyBase58Check: DEZO_DOG } as GetNFTShowcaseRequest,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNftShowcase(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Get summaries of all NFTs included in the NFT showcase.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_NEXT_NFT_SHOWCASE: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Next Nft Showcase',\r\n    route: '/nft/get-next-nft-showcase',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-next-nft-showcase',\r\n    ],\r\n    method: deso.nft.getNextNftShowCase,\r\n    params: { ReaderPublicKeyBase58Check: TYLER } as GetNFTShowcaseRequest,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNextNftShowCase(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Get the time of the next NFT showcase drop.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_NFT_COLLECTION_SUMMARY: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Nft Collection Summary',\r\n    route: '/nft/get-nft-collection-summary',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-collection-summary',\r\n    ],\r\n    method: deso.nft.getNftCollectionSummary,\r\n    params: { PostHashHex: SAMPLE_POST } as GetNFTCollectionSummaryRequest,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNftCollectionSummary(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>Get information on a NFT collection.</div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n  GET_NFT_ENTRIES_FOR_POST_HASH: {\r\n    parentRoute: ParentRoutes.nft,\r\n    title: 'Get Nft Entries For Post Hash',\r\n    route: '/nft/get-nft-entries-for-post-hash',\r\n    githubSource: [],\r\n    documentation: [\r\n      'https://docs.deso.org/for-developers/backend/blockchain-data/api/nft-endpoints#get-nft-entries-for-post-hash',\r\n    ],\r\n    method: deso.nft.getNftEntriesForPostHash,\r\n    params: { PostHashHex: SAMPLE_POST } as GetNFTEntriesForPostHashRequest,\r\n    component: function () {\r\n      return (\r\n        <Route\r\n          key={this.title}\r\n          path={this.route}\r\n          element={\r\n            <Page\r\n              tabs={[]}\r\n              method={{\r\n                methodName: 'deso.nft.getNftEntriesForPostHash(request)',\r\n                params: this.params,\r\n                method: this.method,\r\n              }}\r\n              pretext={PageSection(\r\n                this.title,\r\n                <div>\r\n                  Gets an NFT entry response for each serial number of this NFT\r\n                  post.\r\n                </div>\r\n              )}\r\n              chapters={CHAPTERS}\r\n              selectedChapter={this}\r\n            />\r\n          }\r\n        ></Route>\r\n      );\r\n    },\r\n  },\r\n\r\n  // CREATE_NFT: {\r\n  //   parentRoute: ParentRoutes.nft,\r\n  //   title: 'Create Nft',\r\n  //   route: '/nft/',\r\n  //   githubSource: [],\r\n  //   documentation: [\r\n  //     'https://docs.deso.org/for-developers/backend/transactions/construct-transactions/nft-transactions-api#create-nft',\r\n  //   ],\r\n  //   method: deso.nft.getNftEntriesForPostHash,\r\n  //   params: {\r\n  //     // UpdaterPublicKeyBase58Check: localStorage.getItem('login_key'),\r\n  //     // NFTPostHashHex: '',\r\n  //     // NumCopies: 1,\r\n  //     // NFTRoyaltyToCreatorBasisPoints: 100,\r\n  //     // NFTRoyaltyToCoinBasisPoints: 100,\r\n  //     // HasUnlockable: '',\r\n  //     // IsForSale: true,\r\n  //     // MinBidAmountNanos: '' ,\r\n  //     // IsBuyNow:''\r\n  //     // BuyNowPriceNanos: ''\r\n  //     // AdditionalDESORoyaltiesMap: {''},\r\n  //     // AdditionalCoinRoyaltiesMap: {},\r\n  //     // MinFeeRateNanosPerKB: 1000\r\n  //   } as CreateNFTRequest,\r\n  //   component: function () {\r\n  //     return (\r\n  //       <Route\r\n  //         key={this.title}\r\n  //         path={this.route}\r\n  //         element={\r\n  //           <Page\r\n  //             tabs={[]}\r\n  //             method={{\r\n  //               methodName: 'deso.nft.getNftEntriesForPostHash(request)',\r\n  //               params: this.params,\r\n  //               method: this.method,\r\n  //             }}\r\n  //             pretext={PageSection(\r\n  //               this.title,\r\n  //               <div>\r\n  //                 Gets an NFT entry response for each serial number of this NFT\r\n  //                 post.\r\n  //               </div>\r\n  //             )}\r\n  //             chapters={CHAPTERS}\r\n  //             selectedChapter={this}\r\n  //           />\r\n  //         }\r\n  //       ></Route>\r\n  //     );\r\n  //   },\r\n  // },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}